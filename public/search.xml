<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS数组方法（ES5、ES6）</title>
    <url>/2020/12/12/JS%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95%EF%BC%88ES5%E3%80%81ES6%EF%BC%89/</url>
    <content><![CDATA[<h3 id="1-arr-push"><a href="#1-arr-push" class="headerlink" title="1. arr.push()"></a>1. arr.push()</h3><p>从后面添加元素，添加一个或多个，返回值为添加完后的数组长度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.push(<span class="number">6</span>,<span class="number">7</span>)) <span class="comment">// 7</span></span><br><span class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// [1,2,3,4,5,6,7]</span></span><br></pre></td></tr></table></figure>

<h3 id="2-arr-pop"><a href="#2-arr-pop" class="headerlink" title="2. arr.pop()"></a>2. arr.pop()</h3><p>从后面删除元素，只能是一个，返回值是删除的元素</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.pop())  <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)  <span class="comment">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>

<h3 id="3-arr-shift"><a href="#3-arr-shift" class="headerlink" title="3. arr.shift()"></a>3. arr.shift()</h3><p>从前面删除元素，只能是一个，返回值是删除的元素</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.shift())  <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)  <span class="comment">// [2,3,4,5]</span></span><br></pre></td></tr></table></figure>


<h3 id="4-arr-unshift"><a href="#4-arr-unshift" class="headerlink" title="4. arr.unshift()"></a>4. arr.unshift()</h3><p>从前面添加元素，添加一个或多个，返回值是添加完后的数组的长度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.unshift(<span class="number">6</span>,<span class="number">7</span>))  <span class="comment">// 7</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)  <span class="comment">// [6,7,1,2,3,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="5-arr-splice-index-num"><a href="#5-arr-splice-index-num" class="headerlink" title="5. arr.splice(index,num)"></a>5. arr.splice(index,num)</h3><p>删除从index（索引值）开始之后的那num（默认到数组的结束位置）个元素，返回值是删除的元素数组</p>
<p>参数：index 索引值，num 个数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 删除数组中的某些项</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr.splice(<span class="number">2</span>, <span class="number">2</span>))  <span class="comment">// [2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)  <span class="comment">// [0, 1, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 将数据添加至数组的特定索引位置index</span></span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">arr2.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="string">&#x27;测试值&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// [1, 2, &quot;测试值&quot;, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>

<h3 id="6-str-split"><a href="#6-str-split" class="headerlink" title="6. str.split()"></a>6. str.split()</h3><p>将字符串转化为数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;12345&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(str.split(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]</span></span><br><span class="line"><span class="keyword">let</span> str1 = <span class="string">&#x27;1/2/3/4/5&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(str1.split(<span class="string">&#x27;/&#x27;</span>))  <span class="comment">// [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]</span></span><br></pre></td></tr></table></figure>

<h3 id="7-arr-concat"><a href="#7-arr-concat" class="headerlink" title="7. arr.concat()"></a>7. arr.concat()</h3><p>连接两个数组，返回值是连接后的新数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] <span class="number">2</span> <span class="built_in">console</span>.log(arr.concat([<span class="number">6</span>,<span class="number">7</span>]))  <span class="comment">// [1,2,3,4,5,6,7]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)  <span class="comment">// [1,2,3,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="8-arr-sort"><a href="#8-arr-sort" class="headerlink" title="8. arr.sort()"></a>8. arr.sort()</h3><p>将数组进行排序，返回值是排好的数组，默认是按照最左边的数字进行排序（非数字整体大小）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">40</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">79</span>,<span class="number">3</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.sort())  <span class="comment">// [10,3,40,5,79,8]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a - b) <span class="number">5</span> <span class="built_in">console</span>.log(arr2)  <span class="comment">// [3,5,8,10,40,79]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b - a) <span class="number">8</span> <span class="built_in">console</span>.log(arr3)  <span class="comment">// [79,40,10,8,5,3]</span></span><br></pre></td></tr></table></figure>

<h3 id="9-arr-reverse"><a href="#9-arr-reverse" class="headerlink" title="9. arr.reverse()"></a>9. arr.reverse()</h3><p>将原数组反转，返回值是反转后的数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.reverse())  <span class="comment">// [5,4,3,2,1]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)   <span class="comment">// [5,4,3,2,1]</span></span><br></pre></td></tr></table></figure>

<h3 id="10-arr-slice-start-end"><a href="#10-arr-slice-start-end" class="headerlink" title="10. arr.slice(start, end)"></a>10. arr.slice(start, end)</h3><p>切去索引值start到索引值end（不包含end的值）的数组，返回值是切出去的数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>,<span class="number">3</span>))   <span class="comment">// [2,3]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)    <span class="comment">// [1,2,3,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="11-arr-forEach-callback"><a href="#11-arr-forEach-callback" class="headerlink" title="11. arr.forEach(callback)"></a>11. arr.forEach(callback)</h3><p>遍历数组，无返回值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.forEach(<span class="function">(<span class="params">value, index, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`value--<span class="subst">$&#123;value&#125;</span>    index--<span class="subst">$&#123;index&#125;</span>    array--<span class="subst">$&#123;array&#125;</span>`</span>) </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// value--1    index--0    array--1,2,3,4,5</span></span><br><span class="line"><span class="comment">// value--2    index--1    array--1,2,3,4,5</span></span><br><span class="line"><span class="comment">// value--3    index--2    array--1,2,3,4,5</span></span><br><span class="line"><span class="comment">// value--4    index--3    array--1,2,3,4,5</span></span><br><span class="line"><span class="comment">// value--5    index--4    array--1,2,3,4,5</span></span><br></pre></td></tr></table></figure>

<h3 id="12-arr-map-callbak"><a href="#12-arr-map-callbak" class="headerlink" title="12. arr.map(callbak)"></a>12. arr.map(callbak)</h3><p>遍历数组(对原数组的值进行操作)，返回一个新数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.map( <span class="function">(<span class="params">value, index, array</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value = value * <span class="number">2</span></span><br><span class="line">&#125;) </span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// [2,4,6,8,10]</span></span><br></pre></td></tr></table></figure>

<h3 id="13-arr-filter-callback"><a href="#13-arr-filter-callback" class="headerlink" title="13. arr.filter(callback)"></a>13. arr.filter(callback)</h3><p>过滤数组，返回一个满足要求的数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.filter(<span class="function">(<span class="params">value, index</span>) =&gt;</span> value &gt;<span class="number">2</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr2)  <span class="comment">// [3,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="14-arr-every-callback"><a href="#14-arr-every-callback" class="headerlink" title="14. arr.every(callback)"></a>14. arr.every(callback)</h3><p>根据判断条件，遍历数组中的元素，是否都满足，若都满足则返回true，反之返回false</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.every(<span class="function">(<span class="params">value, index</span>) =&gt;</span> index &gt; <span class="number">2</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr2)  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.every(<span class="function">(<span class="params">value, index</span>) =&gt;</span> index &gt; <span class="number">0</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr3)  <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="15-arr-some-callback"><a href="#15-arr-some-callback" class="headerlink" title="15. arr.some(callback)"></a>15. arr.some(callback)</h3><p>根据判断条件，遍历数组中的元素，是否存在至少有一个满足，若存在则返回true，反之返回false</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.some(<span class="function">(<span class="params">value, index</span>) =&gt;</span> index &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// true</span></span><br><span class="line"> <span class="keyword">let</span> arr3 = arr.some(<span class="function">(<span class="params">value, index</span>) =&gt;</span> index &gt; <span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr3) <span class="comment">// false</span></span><br></pre></td></tr></table></figure>

<h3 id="16-arr-indexOf"><a href="#16-arr-indexOf" class="headerlink" title="16. arr.indexOf()"></a>16. arr.indexOf()</h3><p>从前往后查找某个元素的索引值，若有重复的，则返回第一个查到的索引值，若不存在，返回 -1</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>] <span class="number">2</span> </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.indexOf(<span class="number">4</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr2)  <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.indexOf(<span class="number">6</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr3)  <span class="comment">// -1</span></span><br></pre></td></tr></table></figure>

<h3 id="17-arr-lastIndexOf"><a href="#17-arr-lastIndexOf" class="headerlink" title="17. arr.lastIndexOf()"></a>17. arr.lastIndexOf()</h3><p>从后往前查找某个元素的索引值，若有重复的，则返回第一个查到的索引值，若不存在，返回 -1</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.lastIndexOf(<span class="number">4</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr2)  <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.lastIndexOf(<span class="number">6</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr3)  <span class="comment">// -1</span></span><br></pre></td></tr></table></figure>

<h3 id="18-Array-from"><a href="#18-Array-from" class="headerlink" title="18. Array.from()"></a>18. Array.from()</h3><p>[ES6]将伪数组变成数组，只要有length的就可以转成数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;12345&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(str))    <span class="comment">// [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="number">0</span>:<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>:<span class="string">&#x27;b&#x27;</span>,<span class="attr">length</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(obj))   <span class="comment">// [&quot;a&quot;, &quot;b&quot;]</span></span><br></pre></td></tr></table></figure>

<h3 id="19-Array-of"><a href="#19-Array-of" class="headerlink" title="19. Array.of()"></a>19. Array.of()</h3><p>[ES6]将一组值转换成数组，类似于声明数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;11&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.of(str))   <span class="comment">// [&#x27;11&#x27;]</span></span><br><span class="line"></span><br><span class="line">等价于 </span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;11&#x27;</span>))   <span class="comment">// [&#x27;11]</span></span><br><span class="line"></span><br><span class="line">ps:</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Array</span>()有缺点，就是参数问题引起的重载</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">2</span>)) <span class="comment">// [empty × 2] 是个空数组</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.of(<span class="number">2</span>)) <span class="comment">// [2]</span></span><br></pre></td></tr></table></figure>

<h3 id="20-arr-find-callback"><a href="#20-arr-find-callback" class="headerlink" title="20. arr.find(callback)"></a>20. arr.find(callback)</h3><p>[ES6]找到第一个符合条件的数组成员</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.find(<span class="function">(<span class="params">value, index, array</span>) =&gt;</span> value &gt; <span class="number">2</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr2)   <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>

<h3 id="21-arr-findIndex-callback"><a href="#21-arr-findIndex-callback" class="headerlink" title="21. arr.findIndex(callback)"></a>21. arr.findIndex(callback)</h3><p>[ES6]找到第一个符合条件的数组成员的索引值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="keyword">let</span> arr1 = arr.findIndex(<span class="function">(<span class="params">value, index, array</span>) =&gt;</span> value &gt; <span class="number">2</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr1)  <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<h3 id="22-arr-includes"><a href="#22-arr-includes" class="headerlink" title="22. arr.includes()"></a>22. arr.includes()</h3><p>[ES6]判断数组中是否包含特定的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.includes(<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// ture</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.includes(<span class="number">9</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr3) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr4 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="literal">NaN</span>].includes(<span class="literal">NaN</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr5) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="23-arr-fill-target-start-end"><a href="#23-arr-fill-target-start-end" class="headerlink" title="23. arr.fill(target, start, end)"></a>23. arr.fill(target, start, end)</h3><p>[ES6]使用给定的值，填充一个数组（改变原数组）</p>
<p>参数：  target – 待填充的元素； start – 开始填充的位置 - 索引； end – 终止填充的位置 - 索引（不包括该位置)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.fill(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// [5, 5, 5, 5, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)   <span class="comment">// [5, 5, 5, 5, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.fill(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr3)  <span class="comment">// [1,2,5,5,5]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr4 = arr.fill(<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr4)  <span class="comment">// [1,5,5,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="24-arr-keys"><a href="#24-arr-keys" class="headerlink" title="24. arr.keys()"></a>24. arr.keys()</h3><p>[ES6]遍历数组的键名</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.keys() </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> arr2) &#123; </span><br><span class="line">    <span class="built_in">console</span>.log(key)   <span class="comment">// 0,1,2,3,4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="25-arr-values"><a href="#25-arr-values" class="headerlink" title="25. arr.values()"></a>25. arr.values()</h3><p>[ES6]遍历数组键值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> arr1 = arr.values() </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> val <span class="keyword">of</span> arr1) &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(val); <span class="comment">// 1,2,3,4,5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="26-arr-entries"><a href="#26-arr-entries" class="headerlink" title="26. arr.entries()"></a>26. arr.entries()</h3><p>[ES6]遍历数组的键名和键值</p>
<p>entries() 方法返回迭代数组。<br>迭代数组中每个值 前一个是索引值作为 key， 数组后一个值作为 value。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"><span class="keyword">let</span> arr2 = arr.entries() </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> e <span class="keyword">of</span> arr2) &#123; </span><br><span class="line">    <span class="built_in">console</span>.log(e);   <span class="comment">// [0,1] [1,2] [2,3] [3,4] [4,5]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="27-arr-copyWithin"><a href="#27-arr-copyWithin" class="headerlink" title="27.arr.copyWithin()"></a>27.arr.copyWithin()</h3><p>[ES6]在当前数组内部，将制定位置的数组复制到其他位置，会覆盖原数组项，返回当前数组</p>
<p>参数:　　target –必选 索引从该位置开始替换数组项<br>　　　　 start –可选 索引从该位置开始读取数组项，默认为0.如果为负值，则从右往左读。<br>　　　　 end –可选 索引到该位置停止读取的数组项，默认是Array.length,如果是负值，表示倒数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = arr.copyWithin(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr2)   <span class="comment">// [1, 1, 2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = arr.copyWithin(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr3)   <span class="comment">// [1, 3, 4, 5, 6, 7, 7]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr4 = arr.copyWithin(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>) </span><br><span class="line"><span class="built_in">console</span>.log(arr4)   <span class="comment">// [1, 3, 4, 4, 5, 6, 7]</span></span><br></pre></td></tr></table></figure>

<h3 id="28-Array-isArray-value"><a href="#28-Array-isArray-value" class="headerlink" title="28. Array.isArray(value)"></a>28. Array.isArray(value)</h3><p>判断一个值是否为数组的方法，若为数组，返回true，反之返回false</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1234</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;fsaufh&quot;</span></span><br><span class="line"><span class="keyword">let</span> c = &#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">let</span> d = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mark1 = <span class="built_in">Array</span>.isArray(a) </span><br><span class="line"> <span class="built_in">console</span>.log(mark1)  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mark2 = <span class="built_in">Array</span>.isArray(b) </span><br><span class="line"><span class="built_in">console</span>.log(mark2)  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mark3 = <span class="built_in">Array</span>.isArray(c) </span><br><span class="line"><span class="built_in">console</span>.log(mark3)  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mark4 = <span class="built_in">Array</span>.isArray(d) </span><br><span class="line"><span class="built_in">console</span>.log(mark4)  <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="29-arr-join-separate"><a href="#29-arr-join-separate" class="headerlink" title="29. arr.join(separate)"></a>29. arr.join(separate)</h3><p>把数组中的所有元素放入一个字符串，separate表示分隔符，可省略，默认是逗号</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] </span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.join()) <span class="comment">// 1,2,3,4,5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&quot;&quot;</span>)) <span class="comment">// 12345</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&quot;-&quot;</span>))  <span class="comment">// 1-2-3-4-5</span></span><br></pre></td></tr></table></figure>

<h3 id="30-arr-flat-pliy"><a href="#30-arr-flat-pliy" class="headerlink" title="30. arr.flat(pliy)"></a>30. arr.flat(pliy)</h3><p>[ES6]对数组内嵌套的数组“拉平”，就是把数组中的数组的元素挨个拿出来，放数组元素所在位置，返回一个新的数组，不会影响到原来的数组</p>
<p>参数：pliy表示拉平的层数，默认是1层，想无限拉平可以传入Infinity关键字</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]]] </span><br><span class="line"><span class="built_in">console</span>.log(arr.flat(<span class="number">2</span>))  <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">1</span>,[<span class="number">2</span>,[<span class="number">3</span>,[<span class="number">4</span>,<span class="number">5</span>]]]] </span><br><span class="line"><span class="built_in">console</span>.log(arr2.flat(<span class="literal">Infinity</span>))  <span class="comment">// [1,2,3,4,5]</span></span><br></pre></td></tr></table></figure>

<h3 id="31-arr-flatMap"><a href="#31-arr-flatMap" class="headerlink" title="31. arr.flatMap()"></a>31. arr.flatMap()</h3><p>[ES6]对原数组的每个成员执行一个函数，相当于执行Array.prototype.map(),然后对返回值组成的数组执行flat()方法。该方法返回一个新数组，不改变原数组。只能展开一层数组。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 相当于 [[2, 4], [3, 6], [4, 8]].flat()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">arr.flatMap(<span class="function">(<span class="params">x</span>) =&gt;</span> [x, x * <span class="number">2</span>]) <span class="number">3</span> <span class="comment">// [2, 4, 3, 6, 4, 8]</span></span><br></pre></td></tr></table></figure>

<h3 id="32-arr-toString"><a href="#32-arr-toString" class="headerlink" title="32. arr.toString()"></a>32. arr.toString()</h3><p>将数组转换为字符串并返回。数组中的元素之间用逗号分隔。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Mango&quot;</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr.toString())  <span class="comment">// Banana,Orange,Apple,Mango</span></span><br></pre></td></tr></table></figure>

<h3 id="33-arr-reduce"><a href="#33-arr-reduce" class="headerlink" title="33. arr.reduce()"></a>33. arr.reduce()</h3><p>对数组中的每个元素执行一个提供的函数（升序执行），将其结果汇总为单个返回值。</p>
<p>接收4个参数：</p>
<ol>
<li> Accumulator (acc) (累计器)</li>
<li> Current Value (cur) (当前值)</li>
<li> Current Index (idx) (当前索引)</li>
<li> Source Array (src) (源数组)</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">accumulator, currentValue</span>) =&gt;</span> accumulator + currentValue; <span class="comment">// 1 + 2 + 3 + 4</span></span><br><span class="line"><span class="built_in">console</span>.log(array1.reduce(reducer)); <span class="comment">// expected output: 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 5 + 1 + 2 + 3 + 4</span></span><br><span class="line"><span class="built_in">console</span>.log(array1.reduce(reducer, <span class="number">5</span>)); <span class="comment">// expected output: 15</span></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>array</tag>
      </tags>
  </entry>
</search>
